{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"spring-boot/scheduler/hello_world/","title":"Quartz: Hello World","text":""},{"location":"spring-boot/scheduler/hello_world/#5-hello-world","title":"\u6bcf 5 \u79d2\u8f38\u51fa \"Hello World!\" \u5230\u756b\u9762\u4e0a","text":"<pre>b61a36da-4cbe-4565-beca-ea258a1e31d1</pre> <p>\u7576\u7a0b\u5f0f\u555f\u52d5\u6642\uff0c Quartz Scheduler \u6703\u5728\u80cc\u666f\u57f7\u884c\uff0c\u4e26\u5728 <code>helloWorldTrigger</code> \u5b9a\u7fa9\u7684\u6bcf 5 \u79d2\u57f7\u884c\u4e00\u6b21 <code>HelloWorldJob</code> \u5be6\u4f5c\u7684 <code>execute</code> \u8f38\u51fa \"Hello World!\" \u5230\u756b\u9762\u4e0a\u3002</p> <p>\u5728 <code>build.gradle.kts</code> \u4e2d\u65b0\u589e <code>spring-boot-starter-quartz</code> \u76f8\u4f9d\u5957\u4ef6\u3002\u5982\u6b64\uff0c\u7a0b\u5f0f\u555f\u52d5\u5f8c\u5c31\u6703\u6709\u4e00\u500b Quartz Scheduler \u5728\u80cc\u666f\u57f7\u884c\u3002</p> build.gradle.kts<pre><code>implementation(\"org.springframework.boot:spring-boot-starter-quartz\")\n</code></pre> <p>\u63a5\u8457\uff0c\u6211\u5011\u9700\u8981\u5b9a\u7fa9 <code>HelloWorldJob</code> \u5be6\u4f5c <code>Job</code> \u4ecb\u9762\uff0c\u5be6\u4f5c\u8f38\u51fa \"Hello World!\" \u7684\u908f\u8f2f\u3002</p> HelloWorldJob.java<pre><code>public class HelloWorldJob implements Job {\n    @Override\n    public void execute(JobExecutionContext jobExecutionContext) {\n        System.out.println(\"Hello World!\");\n    }\n}\n</code></pre> <p>\u7136\u5f8c\uff0c\u6211\u5011\u9700\u8981\u518d\u65b0\u589e\u5169\u500b Bean \u5b9a\u7fa9 <code>JobDetail</code> \u548c <code>Trigger</code>\u3002\u5176\u4e2d\uff0c<code>JobDetail</code> \u5b9a\u7fa9\u4e86 <code>HelloWorldJob</code> \u7684 metadata\uff0c\u800c <code>Trigger</code> \u5b9a\u7fa9\u4e86 <code>JobDetail</code> \u7684\u89f8\u767c\u689d\u4ef6\u3002</p> QuartzConfig.java<pre><code>@Component\npublic class QuartzConfig {\n\n    @Bean\n    public JobDetail helloWorldJobDetail() {\n        return JobBuilder.newJob(HelloWorldJob.class)\n                         .withIdentity(\"helloWorldJob\")\n                         .storeDurably() // (1)\n                         .build();\n    }\n\n    @Bean\n    public Trigger helloWorldTrigger(JobDetail printHelloWorldJobDetail) {\n        SimpleScheduleBuilder scheduleBuilder = SimpleScheduleBuilder\n                .simpleSchedule()\n                .withIntervalInSeconds(5)\n                .repeatForever();\n        return TriggerBuilder.newTrigger()\n                             .forJob(printHelloWorldJobDetail)\n                             .withIdentity(\"helloWorldTrigger\")\n                             .withSchedule(scheduleBuilder)\n                             .build();\n    }\n}\n</code></pre> <ol> <li><code>Trigger</code> \u8981\u57f7\u884c\u7684 <code>JobDetail</code> \u5fc5\u9808\u8981\u5728 <code>JobStore</code> \u4e2d\uff0c\u8a2d\u5b9a <code>storeDurably()</code> \u4f86\u4fdd\u8b49 <code>JobDetail</code> \u5728 <code>JobStore</code> \u4e2d\u3002\u5426\u5247\uff0c<code>JobDetail</code> \u6703\u5728\u6c92\u6709\u8207 <code>Trigger</code> \u95dc\u806f\u7684\u60c5\u6cc1\u4e0b\u88ab\u79fb\u9664\u3002</li> </ol> <p>\u6700\u5f8c\uff0c\u628a\u7a0b\u5f0f\u8dd1\u8d77\u4f86\u5f8c\uff0c\u6bcf 5 \u79d2\u5c31\u6703\u5728\u756b\u9762\u4e0a\u8f38\u51fa \"Hello World!\"\u3002</p>"},{"location":"spring-boot/scheduler/hello_world/#5-hello-name","title":"\u6bcf 5 \u79d2\u8f38\u51fa \"Hello {name}!\" \u5230\u756b\u9762\u4e0a","text":"<p>\u9019\u88e1\u5c55\u793a <code>Job</code> \u53ef\u4ee5\u5b58\u53d6\u5230 bean \u7684\u65b9\u5f0f\u3002\u70ba\u4e86\u65b9\u4fbf\u5c55\u793a\uff0c\u6211\u5011\u65b0\u589e\u4e00\u500b <code>name</code> bean\uff0c\u4e26\u5728 <code>HelloWorldJob</code> \u4e2d\u53d6\u5f97 <code>name</code> bean \u7684\u503c\u3002</p> HelloWorldJob.java<pre><code>@Bean\npublic String name() {\n    return \"Teddy\";\n}\n</code></pre> <p>\u4fee\u6539 <code>HelloWorldJob</code> \u7684\u5efa\u69cb\u5f0f\u63a5\u6536 <code>name</code> \u5b57\u4e32\uff0c\u9019\u500b\u8b8a\u6578\u7684\u5be6\u9ad4\uff0c\u6703\u900f\u904e DI \u6ce8\u5165\u3002</p> HelloWorldJob.java<pre><code>public class HelloWorldJob implements Job {\n    private final String name;\n\n    public HelloWorldJob(String name) {\n        this.name = name;\n    }\n\n    @Override\n    public void execute(JobExecutionContext jobExecutionContext) {\n        System.out.println(\"Hello \" + name + \"!\");\n    }\n}\n</code></pre> <p>\u6700\u5f8c\uff0c\u628a\u7a0b\u5f0f\u8dd1\u8d77\u4f86\u5f8c\uff0c\u6bcf 5 \u79d2\u5c31\u6703\u5728\u756b\u9762\u4e0a\u8f38\u51fa \"Hello Teddy!\"\u3002</p>"},{"location":"spring-boot/scheduler/jdbc_job_store/","title":"Quartz: JDBC JobStore","text":""},{"location":"spring-boot/scheduler/jdbc_job_store/#job","title":"\u7c21\u55ae\u7684 Job \u7bc4\u4f8b","text":"<p>\u4ee5\u4e0b\u7bc4\u4f8b\u5c55\u793a\uff0c\u5728 Spring Boot \u4e2d\u5982\u4f55\u8a2d\u5b9a Quartz \u4f7f\u7528 JDBC JobStore\u3002\u5982\u6b64\u4e00\u4f86\uff0c\u6211\u5011\u628a Job \u653e\u5230 cluster \u4e0a\u57f7\u884c\u3002</p> <p>\u5728 <code>build.gradle.kts</code> \u4e2d\u65b0\u589e <code>spring-boot-starter-quartz</code> \u76f8\u4f9d\u5957\u4ef6\u3002\u5982\u6b64\uff0c\u7a0b\u5f0f\u555f\u52d5\u5f8c\u5c31\u6703\u6709\u4e00\u500b Quartz Scheduler \u5728\u80cc\u666f\u57f7\u884c\u3002</p> build.gradle.kts<pre><code>implementation(\"org.springframework.boot:spring-boot-starter-quartz\")\n</code></pre> <p>\u4f7f\u7528 docker compose \u57f7\u884c mysql\u3002</p> compose.yml<pre><code>version: '3.1'\n\nservices:\n  database:\n    image: mysql:8.4.0\n    ports:\n      - \"3306:3306\"\n    environment:\n      MYSQL_ALLOW_EMPTY_PASSWORD: true\n      MYSQL_DATABASE: quartz\n</code></pre> <p>\u8a2d\u5b9a spring boot \u7684 properties\u3002</p> src/main/resources/application.yml<pre><code>spring:\n  datasource: #(1)!\n    name: datasource\n    url: jdbc:mysql://localhost:3306/quartz\n    username: root\n    password:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n  quartz:\n    job-store-type: jdbc #(2)!\n    jdbc:\n      initialize-schema: always #(3)!\n    overwrite-existing-jobs: true\n    properties:\n      org:\n        quartz:\n          scheduler:\n            instanceName: scheduler\n            instanceId: AUTO #(4)!\n          dataSource:\n            quartzDataSource: #(5)!\n              driver: com.mysql.cj.jdbc.Driver\n              URL: jdbc:mysql://localhost:3306/quartz\n              user: root\n              password:\n              provider: hikaricp\n          jobStore:\n            class: org.quartz.impl.jdbcjobstore.JobStoreTX\n            dataSource: quartzDataSource #(5)!\n            isClustered: true #(6)!\n</code></pre> <ol> <li><code>spring.quartz.jdbc.initialize-schema</code> \u5403\u7684 Data Source \u8a2d\u5b9a\u3002\u5728 <code>spring.quartz.properties.org.quartz.dataSource</code> \u8a2d\u5b9a\u7684 Data Source \u4e0d\u652f\u63f4 initialize schema\u3002</li> <li>\u4f7f\u7528 JDBC JobStore\u3002</li> <li>\u6bcf\u6b21\u555f\u52d5\u90fd\u6703\u521d\u59cb\u5316 schema\u3002\u63db\u53e5\u8a71\u8aaa\uff0c\u6211\u5011\u53ef\u4ee5\u4e0d\u5fc5\u624b\u52d5\u65b0\u589e quartz \u76f8\u95dc\u7684 tables\u3002(SQL \u53c3\u8003)</li> <li>\u5728 cluster \u4e0a\u7684 pod \u9700\u8981\u6709\u552f\u4e00\u7684 instance id\u3002\u9019\u88e1\u8a2d\u5b9a <code>AUTO</code> \u5373\u53ef\u9054\u5230\u9700\u6c42\u3002</li> <li>data source \u7684\u8a2d\u5b9a\u3002\u9019\u88e1\u7684\u540d\u7a31\u6703\u5728\u4e0b\u9762\u8a2d\u5b9a job store \u7684 dataSource \u53c3\u8003\u3002</li> <li>job store \u4f7f\u7528\u7684 dataSource\u3002</li> <li>\u555f\u7528 cluster\u3002</li> </ol> \u4f7f\u7528\u8b8a\u6578\u4f86\u907f\u514d\u91cd\u8907\u8a2d\u5b9a <pre><code>spring:\n  quartz:\n    properties:\n      org:\n        quartz:\n          dataSource:\n            quartzDataSource:\n              driver: ${spring.datasource.driver-class-name}\n              URL: ${spring.datasource.url}\n              user: ${spring.datasource.username}\n              password: ${spring.datasource.password}\n</code></pre> <p>\u65b0\u589e <code>Job</code> \u5be6\u4f5c\uff0c\u7c21\u55ae\u7684\u5728\u756b\u9762\u8f38\u51fa\u73fe\u5728\u7684\u6642\u9593\u4ee5\u53ca \"Hello World!\"\u3002\u5370\u51fa\u6642\u9593\u662f\u70ba\u4e86\u5e6b\u52a9\u6211\u5011\u8b58\u5225\u9019\u662f\u54ea\u500b\u6642\u9593\u9ede\u6240\u89f8\u767c\u7684 Job\u3002</p> HelloWorldJob.java<pre><code>public class HelloWorldJob implements Job {\n    @Override\n    public void execute(JobExecutionContext jobExecutionContext) {\n        String time = LocalDateTime.now().format(DateTimeFormatter.ofPattern(\"hh:mm:ss\"));\n        System.out.println(time + \" Hello World!\");\n    }\n}\n</code></pre> <p>\u65b0\u589e <code>JobDetail</code> \u548c <code>Trigger</code> \u7684 Bean \u5b9a\u7fa9\u3002\u9019\u88e1\u8a2d\u5b9a\u6bcf 10 \u79d2\u89f8\u767c\u4e00\u6b21 Job \u5728\u756b\u9762\u4e0a\u8f38\u51fa \"Hello World!\"\u3002</p> <pre><code>@Component\npublic class QuartzConfig {\n\n    @Bean\n    public JobDetail helloWorldJobDetail() {\n        return JobBuilder.newJob(HelloWorldJob.class)\n                         .withIdentity(\"helloWorldJob\")\n                         .storeDurably()\n                         .build();\n    }\n\n    @Bean\n    public Trigger helloWorldTrigger(JobDetail printHelloWorldJobDetail) {\n        return TriggerBuilder.newTrigger()\n                             .forJob(printHelloWorldJobDetail)\n                             .withIdentity(\"helloWorldTrigger\")\n                             .withSchedule(CronScheduleBuilder.cronSchedule(\"*/10 * * * * ?\"))\n                             .build();\n    }\n}\n</code></pre> <p>\u70ba\u4e86\u53ef\u4ee5\u540c\u6642\u57f7\u884c\u591a\u500b instance\uff0c\u6211\u5011\u5c07\u7a0b\u5f0f\u6253\u5305\u6210 tar \u6a94\u3002\u5c08\u6848\u7684\u76ee\u9304 /build/libs \u61c9\u8a72\u6703\u7522\u751f xxx.jar \u6a94\u3002</p> <pre><code>./gradlew bootJar\n</code></pre> <p>\u6253\u958b 3 \u500b terminal\uff0c\u5206\u5225\u57f7\u884c\u4ee5\u4e0b\u6307\u4ee4\u57f7\u884c\u7a0b\u5f0f: (xxx \u66ff\u63db\u6210\u5be6\u969b\u6a94\u6848\u540d\u7a31)</p> <pre><code>java -jar build/libs/xxx.jar\n</code></pre> <p>\u89c0\u5bdf\u6bcf 10 \u79d2\u53ea\u6703\u6709\u4e00\u500b terminal \u8f38\u51fa \"Hello World!\"\u3002\u9019\u8868\u793a Job \u662f\u5728 cluster \u4e0a\u57f7\u884c\u7684\u3002\u5c07\u8f38\u51fa\u8a0a\u606f\u7684 terminal \u95dc\u9589\uff0c\u53ef\u4ee5\u89c0\u5bdf\u5230\u5176\u4ed6 terminal \u6703\u63a5\u7e8c\u57f7\u884c\u8f38\u51fa \"Hello World!\" \u7684 Job\u3002</p> <p>\u4e00\u500b trigger \u4e00\u500b job instance \u7684\u8a2d\u5b9a</p> <p><code>org.quartz.scheduler.batchTriggerAcquisitionMaxCount</code> \u9810\u8a2d\u503c\u70ba 1 \u8a2d\u5b9a\u4e86 Trigger \u7684 job \u4e00\u6b21\u57f7\u884c\u4e00\u500b instance\u3002\u53ef\u4ee5\u8a2d\u5b9a\u5176\u4ed6\u6578\u503c\u4f86\u8b93\u540c\u4e00 trigger \u540c\u6642\u57f7\u884c\u591a\u500b job\u3002</p>"},{"location":"spring-boot/scheduler/jdbc_job_store/#_1","title":"\u63a2\u8a0e: \u57f7\u884c\u6642\u9593\u8d85\u904e\u4e0b\u4e00\u6b21\u6392\u7a0b\u7684\u6642\u9593\u7684\u884c\u70ba","text":"<p>\u5047\u8a2d\u6211\u5011\u8a2d\u5b9a\u6bcf 10 \u79d2\u8dd1\u4e00\u500b job\u3002\u4e26\u4e14\uff0c\u6bcf\u500b job \u57f7\u884c\u6642\u9593\u9700\u8981 15 \u79d2\u3002\u4e5f\u5c31\u662f\u8aaa\uff0cjob \u7684\u57f7\u884c\u6642\u9593\u5fc5\u5b9a\u6703\u8986\u84cb\u5230\u4e0b\u4e00\u6b21\u89f8\u767c\u7684\u6642\u9593\u3002\u5728\u6c92\u6709\u7279\u5225\u8a2d\u5b9a\u7684\u60c5\u6cc1\u4e0b\uff0c\u7d93\u904e 30 \u79d2\u5f8c\uff0c\u5c07\u6703\u6709 3 \u500b job \u88ab\u8dd1\u8d77\u4f86\u3002job \u8207 job \u7684\u6642\u9593\u6642\u9593\u662f\u6703\u91cd\u758a\u7684\u3002</p> <pre>030a69eb-fde6-4512-8508-f5e29218d809</pre>"},{"location":"spring-boot/scheduler/jdbc_job_store/#disallowconcurrentexecution","title":"\u4f7f\u7528<code>@DisallowConcurrentExecution</code> \u4f86\u907f\u514d\u91cd\u758a\u57f7\u884c","text":"<p>\u5728 Job \u7684\u5ba3\u544a\u52a0\u4e0a <code>@DisallowConcurrentExecution</code> \u4f86\u907f\u514d Job \u91cd\u758a\u57f7\u884c\u3002</p> HelloWorldJob.java<pre><code>@DisallowConcurrentExecution\npublic class HelloWorldJob implements Job {\n    // ...\n}\n</code></pre> <p>\u5982\u6b64\uff0c\u7576 Job \u9084\u5728\u57f7\u884c\u6642\uff0c\u4e0b\u4e00\u6b21\u7684 Job \u5c07\u6703\u88ab\u5ef6\u9072\u5230\u4e0a\u4e00\u6b21\u7684 Job \u57f7\u884c\u5b8c\u7562\u5f8c\u518d\u57f7\u884c\u3002\u8b8a\u66f4\u5f8c\u7684 3 \u500b Job \u57f7\u884c\u6642\u9593\u8ef8\u53c3\u8003\u4e0b\u5716:</p> <pre>f4119979-aea0-420a-bf32-9315da1f5539</pre>"},{"location":"spring-boot/scheduler/jdbc_job_store/#trigger","title":"\u8a08\u7b97\u6392\u7a0b\u7684\u6642\u9593\u8207\u89f8\u767c\u7684\u6642\u9593\u5dee\u4f86\u5ffd\u7565\u932f\u904e\u7684 trigger","text":"<p>\u5728 <code>Job.execute</code> \u958b\u59cb\u524d\uff0c\u6aa2\u67e5 job \u89f8\u767c\u7684\u6642\u9593\u8207\u6392\u7a0b\u7684\u6642\u9593\u5dee\uff0c\u5982\u679c\u8d85\u904e\u4e00\u5b9a\u6642\u9593\uff0c\u5247\u5ffd\u7565\u9019\u6b21\u7684 trigger\u3002\u7bc4\u4f8b\u4e2d\u662f\u6642\u9593\u5dee\u8d85\u904e 1000 \u6beb\u79d2 (1 \u79d2) \u5c31\u5ffd\u7565\u9019\u6b21\u7684 trigger\u3002</p> HelloWorldJob.java<pre><code>@DisallowConcurrentExecution\npublic class HelloWorldJob implements Job {\n    @Override\n    public void execute(JobExecutionContext context) {\n        if (context.getFireTime().getTime() - context.getScheduledFireTime().getTime() &gt; 1000) {\n            return;  // skip this trigger\n        }\n        // ...\n    }\n}\n</code></pre> <p>\u5982\u6b64\uff0ctrigger \u7684 job \u90fd\u6703\u843d\u5728\u6392\u7a0b\u8a2d\u5b9a\u7684\u6642\u9593\u9ede\u4e0a\u3002\u8b8a\u66f4\u5f8c\u7684 Job \u57f7\u884c\u6642\u9593\u8ef8\u53c3\u8003\u4e0b\u5716:</p> <pre>7055542f-9e04-4bce-8089-1d94437bb7b9</pre> <p>Note</p> <p>\u76ee\u524d\u6c92\u6709\u767c\u73fe\u5b98\u65b9\u5c0d\u65bc\u6b64\u65b9\u6848\u7684\u89e3\u6cd5\u3002\u9019\u88e1\u7684\u89e3\u6cd5\u6709\u571f\u6cd5\u7149\u92fc\u7684\u611f\u89ba\u3002</p>"},{"location":"spring-boot/scheduler/jdbc_job_store/#job_1","title":"\u63a2\u8a0e: Job \u57f7\u884c\u904e\u7a0b\u767c\u751f\u932f\u8aa4\u7684\u884c\u70ba","text":"<p>\u5728 Job \u57f7\u884c\u904e\u7a0b\u4e2d\uff0c\u5982\u679c\u62cb\u51fa\u4f8b\u5916\uff0cJob \u5373\u4e2d\u65b7\u57f7\u884c\u3002\u5982\u679c\u62cb\u51fa\u7684\u4f8b\u5916\u662f <code>JobExecutionException</code> \u4e26\u8a2d\u5b9a <code>refireImmediately</code> \u70ba <code>true</code>\uff0c\u5247 Job \u6703\u7acb\u5373\u91cd\u65b0\u57f7\u884c\uff0c\u4e26\u4e14\u4e0b\u4e00\u6b21 <code>JobExecutionContext.getRefireCount()</code> \u6578\u5b57\u7d2f\u52a0\u3002 \u4ee5\u4e0b\u7a0b\u5f0f\u78bc\u5c55\u793a\u7576 Job \u5931\u6557\u62cb\u51fa\u4f8b\u5916\u6642\uff0c retry 3 \u6b21\u3002</p> HelloWorldJob.java<pre><code>@DisallowConcurrentExecution\npublic class HelloWorldJob implements Job {\n    @Override\n    public void execute(JobExecutionContext context) {\n        if(context.getRefireCount() &gt; 3) {\n            throw new JobExecutionException(\"Too many re-fires\");\n        }\n\n        // ...\n\n        throw new JobExecutionException(\"Something goes wrong\", true);\n    }\n}\n</code></pre>"},{"location":"spring-boot/scheduler/jdbc_job_store/#_2","title":"\u53c3\u8003","text":"<ul> <li>Sprint Boot Quartz Scheduler</li> <li>Quartz Configuration - Configure Clustering with JDBC-JobStore </li> </ul>"}]}